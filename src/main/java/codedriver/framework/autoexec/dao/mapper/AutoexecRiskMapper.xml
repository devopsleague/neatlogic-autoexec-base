<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.autoexec.dao.mapper.AutoexecRiskMapper">

    <select id="checkRiskIsExistsById" parameterType="java.lang.Long" resultType="int">
        select
        count(1)
        from `autoexec_risk`
        where `id` = #{value}
    </select>

    <select id="getRiskIdByName" parameterType="java.lang.String" resultType="java.lang.Long">
        select `id`
        from `autoexec_risk`
        where `name` = #{value}
    </select>

    <select id="getAllActiveRisk" resultType="codedriver.framework.common.dto.ValueTextVo">
        select
        `id` as `value`,
        `name` as `text`
        from
        `autoexec_risk`
        where `is_active` = 1
    </select>

    <select id="getAutoexecRiskById" parameterType="java.lang.Long" resultType="codedriver.framework.autoexec.dto.AutoexecRiskVo">
        SELECT
            `id`,
            `name`,
            `color`,
            `is_active` AS isActive,
            `description`,
            `sort`,
            `fcd`,
            `fcu`,
            `lcd`,
            `lcu`
        FROM `autoexec_risk`
        WHERE `id` = #{value}
    </select>

    <select id="searchRiskCount" parameterType="codedriver.framework.autoexec.dto.AutoexecRiskVo" resultType="int">
        select count(`id`)
        from `autoexec_risk`
        <where>
            <if test="keyword != null and keyword != ''">
                and `name` like CONCAT('%', #{keyword}, '%')
            </if>
            <if test="isActive != null">
                and `is_active` = #{isActive}
            </if>
        </where>
    </select>

    <select id="searchRisk" parameterType="codedriver.framework.autoexec.dto.AutoexecRiskVo" resultType="codedriver.framework.autoexec.dto.AutoexecRiskVo">
        select
        `id`,
        `name`,
        `color`,
        `is_active` AS isActive,
        `description`,
        `sort`
        from `autoexec_risk`
        <where>
            <if test="keyword != null and keyword != ''">
                and `name` like CONCAT('%', #{keyword}, '%')
            </if>
            <if test="isActive != null">
                and `is_active` = #{isActive}
            </if>
        </where>
        order by `sort`
        <if test="needPage == true">
            limit #{startNum}, #{pageSize}
        </if>
    </select>

    <select id="checkRiskNameIsRepeats" parameterType="codedriver.framework.autoexec.dto.AutoexecRiskVo" resultType="int">
        select count(1) from `autoexec_risk` where `name` = #{name} and `id` != #{id}
    </select>

    <select id="getMaxSort" resultType="java.lang.Integer">
        select max(`sort`) from `autoexec_risk`
    </select>

    <select id="checkRiskHasBeenReferredById" parameterType="java.lang.Long" resultType="int">
        select sum(refCount)
        from
        (
        select
        count(`id`) as refCount
        from `autoexec_tool`
        where `risk_id` = #{value}
        union all
        select
        count(`id`) as refCount
        from `autoexec_script`
        where `risk_id` = #{value}
        ) a
    </select>

    <select id="getReferenceCountListForTool" parameterType="java.util.List" resultType="codedriver.framework.autoexec.dto.AutoexecRiskVo">
        select
        `risk_id` as id,
        count(`id`) as referenceCountForTool
        from `autoexec_tool`
        where `risk_id` in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        group by `risk_id`
    </select>

    <select id="getReferenceCountListForScript" parameterType="java.util.List" resultType="codedriver.framework.autoexec.dto.AutoexecRiskVo">
        select
        `risk_id` as id,
        count(`id`) as referenceCountForScript
        from `autoexec_script`
        where `risk_id` in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <update id="updateRisk" parameterType="codedriver.framework.autoexec.dto.AutoexecRiskVo">
        update `autoexec_risk`
        set `name` = #{name},
        `color` = #{color},
        `is_active` = #{isActive},
        `description` = #{description},
        `sort` = #{sort}
        where `id` = #{id}
    </update>

    <update id="updateSortDecrement">
        update `autoexec_risk` SET `sort` = `sort` - 1
        WHERE `sort` &gt;= #{fromSort}
        <if test="toSort != null">
            AND `sort` &lt;= #{toSort}
        </if>
    </update>

    <update id="updateSortIncrement">
        update `autoexec_risk` SET `sort` = `sort` + 1
        WHERE `sort` &gt;= #{fromSort}
        <if test="toSort != null">
            AND `sort` &lt;= #{toSort}
        </if>
    </update>

    <insert id="insertRisk" parameterType="codedriver.framework.autoexec.dto.AutoexecRiskVo">
        insert into `autoexec_risk` (
        `id`,
        `name`,
        `color`,
        `is_active`,
        `description`,
        `sort`,
        `fcd`,
        `fcu`,
        `lcd`,
        `lcu`
        ) values (
        #{id},
        #{name},
        #{color},
        #{isActive},
        #{description},
        #{sort},
        now(3),
        #{fcu},
        now(3),
        #{lcu}
        )
    </insert>

    <delete id="deleteRiskById" parameterType="java.lang.Long">
        delete
        from `autoexec_risk`
        where `id` = #{value}
    </delete>
</mapper>

